const express = require('express');
const axios = require('axios');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const AUTH_URL = 'http://20.244.56.144/test/auth';
const PRODUCTS_URL = 'http://20.244.56.144/test/companies/AMZ/categories/Laptop/products';

const AUTH_CREDENTIALS = {
    companyName: "AmityUniversityNoida",
    clientID: "cdcfd22e-b749-44ed-9321-d1155d83aa01",
    clientSecret: "bQIOjHcRHiYwzLKz",
    ownerName: "ayushgupta",
    ownerEmail: "aygupta14@gmail.com",
    rollNo: "A2305321035"
};

// Fetch a new access_token
async function fetchaccess_token() {
    try {
        const response = await axios.post(AUTH_URL, AUTH_CREDENTIALS);
        console.log('Auth response data:', response.data);  // Log the entire response data
        if (response.data && response.data.access_token) {
            return response.data.access_token;
        } else {
            throw new Error('access_token not found in response');
        }
    } catch (error) {
        console.error('Error fetching access_token:', error);
        throw error;
    }
}

// Fetch products using the access_token
async function fetchProducts(access_token, queryParams) {
    try {
        const response = await axios.get(PRODUCTS_URL, {
            headers: { Authorization: ⁠ Bearer ${access_token} ⁠ },
            params: queryParams
        });
        return response.data;
    } catch (error) {
        console.error('Error fetching products:', error.response ? error.response.data : error.message);
        throw error;
    }
}

// Endpoint to fetch products
app.get('/products', async (req, res) => {
    try {
        const access_token = await fetchaccess_token();
        const products = await fetchProducts(access_token, req.query);
        res.json(products);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch products' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(⁠ Server is running on port ${PORT} ⁠);
});const express = require('express');
const axios = require('axios');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const AUTH_URL = 'http://20.244.56.144/test/auth';
const PRODUCTS_URL = 'http://20.244.56.144/test/companies/AMZ/categories/Laptop/products';

const AUTH_CREDENTIALS = {
    companyName: "AmityUniversityNoida",
    clientID: "cdcfd22e-b749-44ed-9321-d1155d83aa01",
    clientSecret: "bQIOjHcRHiYwzLKz",
    ownerName: "ayushgupta",
    ownerEmail: "aygupta14@gmail.com",
    rollNo: "A2305321035"
};

// Fetch a new access_token
async function fetchaccess_token() {
    try {
        const response = await axios.post(AUTH_URL, AUTH_CREDENTIALS);
        console.log('Auth response data:', response.data);  // Log the entire response data
        if (response.data && response.data.access_token) {
            return response.data.access_token;
        } else {
            throw new Error('access_token not found in response');
        }
    } catch (error) {
        console.error('Error fetching access_token:', error);
        throw error;
    }
}

// Fetch products using the access_token
async function fetchProducts(access_token, queryParams) {
    try {
        const response = await axios.get(PRODUCTS_URL, {
            headers: { Authorization: ⁠ Bearer ${access_token} ⁠ },
            params: queryParams
        });
        return response.data;
    } catch (error) {
        console.error('Error fetching products:', error.response ? error.response.data : error.message);
        throw error;
    }
}

// Endpoint to fetch products
app.get('/products', async (req, res) => {
    try {
        const access_token = await fetchaccess_token();
        const products = await fetchProducts(access_token, req.query);
        res.json(products);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch products' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(⁠ Server is running on port ${PORT} ⁠);
});
